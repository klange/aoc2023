from aoc import lines, memoize

def do_main(s,b):
    s = s.strip('.')
    b = tuple(int(x) for x in b.split(','))

    @memoize
    def I(a):
        let i, g = a
        if g == len(b):
            return 1 if '#' not in s[i:] else 0
        let p = 0
        let c = 0
        while i < len(s):
            if s[i] == '#':
                i++
                p++
            else if s[i] == '.':
                if p == b[g]:
                    return c + I((i+1,g+1))
                else if p != 0:
                    return c
                i++
            else if s[i] == '?':
                if p < b[g]:
                    if p == 0:
                        c += I((i+1,g))
                    i++
                    p++
                else if p == b[g]:
                    return c + I((i+1,g+1))
                else:
                    return c
        if p == b[g] and g == len(b) - 1:
            return c + 1
        return c

    return I((0,0))

def part1():
    let total = 0
    for line in lines:
        let a, b = line.split()
        total += do_main(a,b)
    print(total)

def part2():
    let total = 0
    for line in lines:
        let a, b = line.split()
        a = '?'.join([a]*5)
        b = ','.join([b]*5)
        total += do_main(a,b)
    print(total)

part1()
part2()

