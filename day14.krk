from aoc import lines
import dis

def main(part):
    let world = [bytearray(line.encode()) for line in lines]
    def make_it(M,R,C,R_J,C_J):
        let code = f'''
if True:
    def tilt(world):
        for a in range({M}):
            let f, n, b = 0, 0, 0
            while b <= {M}:
                if b == {M} or world[{R}][{C}] == 35:
                    let j = b - f - n
                    while j < b - n:
                        world[{R_J}][{C_J}] = 79
                        j++
                    while j < b:
                        world[{R_J}][{C_J}] = 46
                        j++
                    f = 0
                    n = 0
                else if world[{R}][{C}] == 79:
                    f++
                else if world[{R}][{C}] == 46:
                    n++
                b++
'''
        return function(dis.build(code).__constants__[0],(),{})

    let M = len(world)
    let tilt_east  = make_it(M, 'a',f'{M} - b - 1','a',f'{M} - j - 1')
    let tilt_west  = make_it(M, 'a','b','a','j')
    let tilt_north = make_it(M, 'b','a','j','a')
    let tilt_south = make_it(M, f'{M} - b - 1','a',f'{M} - j - 1','a')

    if part == 1:
        tilt_north(world)
    else if part == 2:
        let seen = {}
        let C
        let i = 0
        while i < 1000000000:
            let t = tuple(line.decode() for line in world)
            if t in seen:
                world = [bytearray(line.encode()) for line in seen[t][0]]
                if C is None:
                    C = i - seen[t][1]
                    i = i + ((1000000000 - i) // C) * C
            else:
                tilt_north(world)
                tilt_west(world)
                tilt_south(world)
                tilt_east(world)
                seen[t] = tuple(line.decode() for line in world), i
            i += 1
    let load = 0
    for c in range(len(world[0])):
        for r in range(len(world)):
            if world[r][c] == ord('O'):
                load += len(world)-r
    print(load)

main(1)
main(2)
